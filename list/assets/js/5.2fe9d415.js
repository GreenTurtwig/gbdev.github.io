(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{304:function(e,r,t){"use strict";t.r(r);var o=t(46),a=Object(o.a)({},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("div",{staticStyle:{"line-height":"90%","letter-spacing":"-0.05em","font-weight":"400","font-size":"2.6em"}},[e._v("Awesome"),t("span",{staticStyle:{"font-weight":"600","letter-spacing":"-0.05em"}},[e._v("\n    Game Boy Development\n")])]),e._v(" "),t("br"),e._v(" "),t("div",{staticStyle:{"letter-spacing":"-0.05em","font-weight":"500","font-size":"18px"}},[e._v("\nA curated list of awesome Game Boy (Color) Development resources, tools, docs, related projects and open-source ROMs. Inspired by the "),t("a",{attrs:{href:"https://github.com/sindresorhus/awesome"}},[e._v(" awesome ")]),e._v(" list thing."),t("br"),e._v(" "),t("br"),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/gbdev",target:"_blank"}},[t("img",{attrs:{src:"https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/github.svg",width:"40",height:"40"}})]),e._v(" "),t("a",{attrs:{href:"https://instagram.com/gb_things",target:"_blank"}},[t("img",{attrs:{src:"https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/instagram.svg",width:"40",height:"40"}})]),e._v(" "),t("a",{attrs:{href:"https://twitter.com/gb_things",target:"_blank"}},[t("img",{attrs:{src:"https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/twitter.svg",width:"40",height:"40"}})]),e._v(" "),t("a",{attrs:{href:"https://discordapp.com/invite/gpBxq85",target:"_blank"}},[t("img",{attrs:{src:"https://cdn.jsdelivr.net/npm/simple-icons@latest/icons/discord.svg",width:"40",height:"40"}})])])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://discord.gg/gpBxq85",target:"_blank",rel:"noopener noreferrer"}},[e._v("Join us on Discord!"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"introduction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLu3xpmdUP-GRDp8tknpXC_Y4RUQtMMqEu",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Game Boy, a hardware autopsy"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://media.ccc.de/v/33c3-8029-the_ultimate_game_boy_talk",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Ultimate Game Boy Talk"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Baekalfen/PyBoy/blob/master/PyBoy.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emulation of Nintendo Game Boy"),t("OutboundLink")],1),e._v(" - Overview of the Game Boy hardware with the perspective of building an emulator.")])]),e._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[e._v("DISAMBIGUATION")]),e._v(" "),t("p",[e._v("Although this documentation is focused on the original (1989) Game Boy (DMG), the "),t("em",[e._v("Game Boy Color")]),e._v(" (GBC) and "),t("em",[e._v("Super Game Boy")]),e._v(" (SGB) are very similar systems, with few important distinctions, such as:")]),e._v(" "),t("ul",[t("li",[e._v("Different hardware specifications")]),e._v(" "),t("li",[e._v("Specific hardware and software features")]),e._v(" "),t("li",[e._v("Specific registers")]),e._v(" "),t("li",[e._v("Specific bugs and exploitable behaviours")])]),e._v(" "),t("p",[e._v("If you aim to develop your software for SGB or GBC, or you want to know how it runs on the other systems, you may want to take advantage and adapt to these differences, check the "),t("a",{attrs:{href:"#game-boy-color"}},[e._v("Game Boy Color")]),e._v(" category and look for specific references to GBC/CGB and SGB.")])]),e._v(" "),t("h2",{attrs:{id:"community"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#community","aria-hidden":"true"}},[e._v("#")]),e._v(" Community")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://discord.gg/gpBxq85",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbdev Discord Server"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://chat.efnet.org/?channels=gbdev",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("#gbdev")]),e._v(" on EFnet"),t("OutboundLink")],1),e._v(" - IRC channel.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gbdev.gg8.se/wiki/articles/Main_Page",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbdev.gg8.se Wiki"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://devrs.com/gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("devrs.com/gb"),t("OutboundLink")],1),e._v(" - Old home of the scene: examples, sources, complete documentation, guides, tutorials and various tools.")])]),e._v(" "),t("h2",{attrs:{id:"documentation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#documentation","aria-hidden":"true"}},[e._v("#")]),e._v(" Documentation")]),e._v(" "),t("ul",[t("li",[t("strong",[t("a",{attrs:{href:"https://archive.org/download/GameBoyProgManVer1.1/GameBoyProgManVer1.1.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy Programming Manual"),t("OutboundLink")],1)]),e._v(" - Official Game Boy programming and hardware manual by Nintendo.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gbdev.gg8.se/wiki/articles/Pan_Docs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pan Docs"),t("OutboundLink")],1),e._v(" - Historical comprehensive technical reference, wikified, corrected and updated.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/AntonioND/giibiiadvance/blob/master/docs/TCAGBD.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Cycle-Accurate Game Boy Docs"),t("OutboundLink")],1),e._v(" - A precise documentation by AntonioND to make a cycle-accurate Game Boy emulator.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://gekkio.fi/files/gb-docs/gbctr.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy: Complete Technical Reference"),t("OutboundLink")],1),e._v(" by Gekkio.")])]),e._v(" "),t("h4",{attrs:{id:"misc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#misc","aria-hidden":"true"}},[e._v("#")]),e._v(" Misc")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://pepijndevos.nl/sha2017/workshop.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Introduction to Game Boy Hacking"),t("OutboundLink")],1),e._v(" - Workshop introducing basic assembly, debugging and reverse engineering.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.emulatronia.com/doctec/consolas/gameboy/gameboy.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("Everything You Always Wanted To Know About GAME BOY"),t("OutboundLink")],1),e._v(" - but were afraid to ask")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bwhitman/pushpin/blob/master/src/gbsound.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBSOUND.txt"),t("OutboundLink")],1),e._v(" - A document detailing the Game Boy sound engine.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://raw.githubusercontent.com/gb-archive/salvage/master/txt-files/gb-instructions.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("GB Instructions"),t("OutboundLink")],1),e._v(" Game Boy Assembly commands.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://raw.githubusercontent.com/gb-archive/salvage/master/txt-files/gb-asm-tips.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("GB ASM Tips"),t("OutboundLink")],1),e._v(" - Some tips for coding in Assembly by Jeff Frohwein.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.devrs.com/gb/files/faqs.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbdev FAQs"),t("OutboundLink")],1),e._v(" - Must read by Jeff Frohwein.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.neviksti.com/DMG/DMG_ROM.asm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy Bootrom"),t("OutboundLink")],1),e._v(" - Commented dump of the DMG bootrom.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://fms.komkon.org/GameBoy/Tech/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GB Technical Information"),t("OutboundLink")],1),e._v(" - Some old code resources.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.z80.info/z80gboy.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("Differences between the Z80 and the gameboy's processor"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.huderlem.com/demos/gameboy2bpp.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gameboy 2BPP Graphics Format"),t("OutboundLink")],1),e._v(" - Information on how the Game Boy interprets VRAM tile data to color pixels.")])]),e._v(" "),t("h4",{attrs:{id:"cheatsheets-tables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cheatsheets-tables","aria-hidden":"true"}},[e._v("#")]),e._v(" Cheatsheets, Tables")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/JustinLloyd/Gameboy-Cribsheet/raw/master/Current%20Release/Gameboy%20Crib%20Sheet%20990823-0325.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy Crib Sheet"),t("OutboundLink")],1),e._v(" - A handy printable reference sheet with ASM opcodes, memory locations, and much more ("),t("a",{attrs:{href:"https://github.com/JustinLloyd/Gameboy-Cribsheet",target:"_blank",rel:"noopener noreferrer"}},[e._v("repository"),t("OutboundLink")],1),e._v(").")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://pastraiser.com/cpu/gameboy/gameboy_opcodes.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("OP Codes cheatsheet"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://rednex.github.io/rgbds/gbz80.7.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("rednex gbz80 opcode reference"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://goldencrystal.free.fr/GBZ80Opcodes.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Opcode table"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.devrs.com/gb/files/opcodes.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Opcode table with timings and flags"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.devrs.com/gb/files/GBCPU_Instr.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy CPU Instruction Set Sheet (GCISheet)"),t("OutboundLink")],1),e._v(" - Cheatsheet for the available Instruction Set.")])]),e._v(" "),t("h3",{attrs:{id:"game-boy-color"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#game-boy-color","aria-hidden":"true"}},[e._v("#")]),e._v(" Game Boy Color")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://tcrf.net/Game_Boy_Color_Bootstrap_ROM",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy Color Bootstrap ROM"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://tcrf.net/Notes:Game_Boy_Color_Bootstrap_ROM",target:"_blank",rel:"noopener noreferrer"}},[e._v("Unused Palettes"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://forums.nesdev.com/viewtopic.php?p=114388&sid=c3d4ce08cfd9d9c834958d4f148750c3#p114388",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBC colorization palettes in the BIOS"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://drive.google.com/file/d/1a0HTmBiRxoZw4XgLEDzwGCugfTfdIQwT/view?usp=sharing",target:"_blank",rel:"noopener noreferrer"}},[e._v("High resolution GBC schematics"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://gist.github.com/drhelius/6063265",target:"_blank",rel:"noopener noreferrer"}},[e._v("GameBoy Color Boot ROM Disassembly"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"hardware"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hardware","aria-hidden":"true"}},[e._v("#")]),e._v(" Hardware")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://gbdev.gg8.se/wiki/articles/DMG_Schematics",target:"_blank",rel:"noopener noreferrer"}},[e._v("DMG Schematics"),t("OutboundLink")],1),e._v(" - Hardware schematics.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://marc.rawer.de/Gameboy/Docs/GBProject.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Game Boy Project"),t("OutboundLink")],1),e._v(" - Provides a study on the hardware and detailed constructional information for the implementation of three 8-bit bidirectional parallel ports.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gekkio/gb-hardware",target:"_blank",rel:"noopener noreferrer"}},[e._v("Related custom hardware"),t("OutboundLink")],1),e._v(" - by Gekkio.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/applefreak/esp8266-gameboy-dev-board",target:"_blank",rel:"noopener noreferrer"}},[e._v("ESP8266 GB Dev Board"),t("OutboundLink")],1),e._v(" - Dev board for Game Boy accessories development, powered by ESP8266.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/applefreak/esp8266-gameboy-printer",target:"_blank",rel:"noopener noreferrer"}},[e._v("ESP8266 GB Printer"),t("OutboundLink")],1),e._v(" - A device that emulates the GB Printer and lets you retrieve images using WiFi.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://verhoeven272.nl/fruttenboel/Gameboy/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("fruttenboel"),t("OutboundLink")],1),e._v(" - Page with loads of information on the hardware, custom boards to interface with the console and other related projects.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://gbhwdb.gekkio.fi/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy hardware database"),t("OutboundLink")],1),e._v(" - Data and photos of various types of Game Boy consoles.")])]),e._v(" "),t("h3",{attrs:{id:"peripherals"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#peripherals","aria-hidden":"true"}},[e._v("#")]),e._v(" Peripherals")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://shonumi.github.io/dandocs.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dan Docs"),t("OutboundLink")],1),e._v(" - Obscure Game Boy hardware documentation.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://shonumi.github.io/articles.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Edge of Emulation"),t("OutboundLink")],1),e._v(", a series of articles about emulating and investigating Game Boy accessories. Also available as "),t("a",{attrs:{href:"https://github.com/shonumi/gbe-plus/tree/master/src/docs/technical",target:"_blank",rel:"noopener noreferrer"}},[e._v("technical documents"),t("OutboundLink")],1),e._v(" in the GBE+ emulator documentation.\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://shonumi.github.io/articles/art14.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mobile Adapter GB"),t("OutboundLink")],1),e._v(" - Internet connectivity and DLC on the Game Boy Color.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://shonumi.github.io/articles/art2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Game Boy Printer"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://shonumi.github.io/articles/art13.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pocket Sonar"),t("OutboundLink")],1),e._v(" - A blue cart with built-in sonar hardware.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://shonumi.github.io/articles/art8.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zok Zok Heroes"),t("OutboundLink")],1),e._v("  - Zok Zok Heroes' Full Changer, a motion-activated accessory.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://shonumi.github.io/articles/art11.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Infrared Madness"),t("OutboundLink")],1),e._v(" - Infrared communication on the Game Boy Color.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://shonumi.github.io/articles/art9.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy 4-Player Adapter"),t("OutboundLink")],1),e._v(" - DMG-07.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://shonumi.github.io/articles/art7.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Barcode Boy"),t("OutboundLink")],1),e._v(" - The first Game Boy card-scanner.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://shonumi.github.io/articles/art6.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Barcode Taisen Bardigun"),t("OutboundLink")],1),e._v(" - A late 90s DMG-GBC barcode reader.")])])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://raw.githubusercontent.com/shonumi/gbe-plus/master/src/docs/technical/DMG_07.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("DMG-07 Technical Documentation"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/AntonioND/gbcam-rev-engineer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy Camera RE"),t("OutboundLink")],1),e._v(" - Documentation about GB Camera and tools used to reverse engineer it by using Arduino UNO.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.pinchofintelligence.com/photorealistic-neural-network-gameboy/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Creating photo realistic images with neural networks and a Gameboy Camera"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://shonumi.github.io/articles/art2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Game Boy Printer"),t("OutboundLink")],1),e._v(" - An in-depth technical document about the printer hardware, the communication protocol and the usual routine that games used for implementing the print feature.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=43FfJvd-YP4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ben Heck Reverse Engineers Game Boy Printer"),t("OutboundLink")],1),e._v(" (Errata: the used thermal paper is expired, 4 colors are actually printable).")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mofosyne/arduino-gameboy-printer-emulator",target:"_blank",rel:"noopener noreferrer"}},[e._v("Arduino Game Boy Printer Emulator"),t("OutboundLink")],1),e._v(" - Emulating a Game Boy Printer via the Game Boy Link cable with an Arduino Nano.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://bulbapedia.bulbagarden.net/wiki/Mobile_Game_Boy_Adapter",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mobile Game Boy Adapter"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://nectaris.tg-16.com/GB-KISS-LINK-FAQ-hudson-gameboy-nectaris.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("GB KISS LINK MODEM"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"cartridges"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cartridges","aria-hidden":"true"}},[e._v("#")]),e._v(" Cartridges")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/AntonioND/giibiiadvance/tree/master/docs",target:"_blank",rel:"noopener noreferrer"}},[e._v("AntonioND's docs"),t("OutboundLink")],1),e._v(" - Corrected schematics and infos on cartridge header data.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gekkio.fi/blog/2015-02-14-mooneye-gb-gameboy-cartridge-types.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gekkio's Game Boy cartridge types"),t("OutboundLink")],1),e._v(" - An overview on existing cartridge types.")]),e._v(" "),t("li",[e._v("Gekkio's cartridge analysis:\n"),t("ul",[t("li",[t("a",{attrs:{href:"http://gekkio.fi/blog/2015-05-18-mooneye-gb-cartridge-analysis-dmg-bean-02.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("DMG-BEAN-02"),t("OutboundLink")],1),e._v(";")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gekkio.fi/blog/2015-05-17-mooneye-gb-cartridge-analysis-fortress-of-fear.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("MBC1"),t("OutboundLink")],1),e._v(";")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gekkio.fi/blog/2015-02-28-mooneye-gb-cartridge-analysis-tetris.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("no MBC"),t("OutboundLink")],1),e._v(".")])])]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.devrs.com/gb/files/gb.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy Cartridges Schematics"),t("OutboundLink")],1),e._v(" - Schematics for MBC2 and MBC3 types.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://imgur.com/a/D5bpC",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cartridges PCB photos"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://reinerziegler.de.mirrors.gg8.se/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reiner Ziegler's Game Boy page"),t("OutboundLink")],1),e._v(" - Commercial and homemade programmable cartridges and programming systems. Tutorials, wiring and schematics provided.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.devrs.com/gb/files/mbc1.gif",target:"_blank",rel:"noopener noreferrer"}},[e._v("MBC1+RAM+Battery cartridge Schematic"),t("OutboundLink")],1),e._v(" - First schematics by Jeff Frohwein.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://fms.komkon.org/GameBoy/Tech/Carts.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("MBC1 and MBC2 cartridges circuits"),t("OutboundLink")],1),e._v(" and explanation on how these MBC actually bank switch and control RAM.")]),e._v(" "),t("li",[t("a",{attrs:{href:"CartridgeList.csv"}},[e._v("GB Rom List")]),e._v(" - Navigable table of every game released with details on their cartridges.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gekkio.fi/blog/2016-03-19-game-boy-cartridge-pcb-photos.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy cartridge PCB photos"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://dhole.github.io/post/gameboy_cartridge_emu_1/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emulating a GameBoy Cartridge"),t("OutboundLink")],1),e._v(" - Emulating the functionality of a Game Boy cartridge with the development board STM32F4.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.happydaze.se/wolf/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Wolf"),t("OutboundLink")],1),e._v(" - Game Boy cartridge with co-processor.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dwaq/Homebrew-Gameboy-Cartridge",target:"_blank",rel:"noopener noreferrer"}},[e._v("Homebrew-Gameboy-Cartridge"),t("OutboundLink")],1),e._v(" - Eagle library, schematic, and board files for a cartridge PCB that using an Atmel AT49F040 as ROM.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Xyl2k/Gameboy-Color-Cartridge",target:"_blank",rel:"noopener noreferrer"}},[e._v("Homebrew Gameboy Color Cartridge"),t("OutboundLink")],1),e._v(" - Board layout for an EEPROM powered cartridge.")])]),e._v(" "),t("h2",{attrs:{id:"emulator-development"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emulator-development","aria-hidden":"true"}},[e._v("#")]),e._v(" Emulator Development")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=GBYwjch6oEE",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reverse Engineering fine details of Game Boy hardware"),t("OutboundLink")],1),e._v(" ("),t("a",{attrs:{href:"https://gekkio.fi/blog/2018-02-05-errata-for-reverse-engineering-fine-details-of-game-boy-hardware.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("errata"),t("OutboundLink")],1),e._v(") - 43 minutes talk by Gekkio given at Disobey 2018.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://blog.ryanlevick.com/DMG-01/public/book/",target:"_blank",rel:"noopener noreferrer"}},[e._v("DMG-01"),t("OutboundLink")],1),e._v(" - An educational Gameboy Emulator in Rust and a companion book explaining its development. "),t("em",[t("a",{attrs:{href:"https://media.ccc.de/v/rustfest-rome-3-gameboy-emulator",target:"_blank",rel:"noopener noreferrer"}},[e._v("Oh Boy! Creating a Game Boy Emulator in Rust"),t("OutboundLink")],1)]),e._v(" is a talk given at Rust Fest 18 about this.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://imrannazar.com/gameboy-Emulation-in-JavaScript",target:"_blank",rel:"noopener noreferrer"}},[e._v("Building a Game Boy emulator in JavaScript"),t("OutboundLink")],1),e._v(" - Step by step tutorial.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://cturt.github.io/cinoop.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Writing a Game Boy emulator, Cinoop"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://realboyemulator.wordpress.com/posts/",target:"_blank",rel:"noopener noreferrer"}},[e._v("RealBoy Emulator"),t("OutboundLink")],1),e._v(" - A series of posts about the design and implementation of the RealBoy Emulator.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.codeslinger.co.uk/pages/projects/gameboy.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Codeslinger"),t("OutboundLink")],1),e._v(" - Another series of posts documenting the building of an emulator.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://blog.rekawek.eu/2017/02/09/coffee-gb/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Why did I spend 1.5 months creating a Gameboy emulator?"),t("OutboundLink")],1),e._v(" - Blog post.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://binji.github.io/2017/12/31/binjgb-rewind.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("binjgb rewind"),t("OutboundLink")],1),e._v(" - Implementing a "),t("em",[e._v("rewind")]),e._v(" feature.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://binji.github.io/2017/02/26/binjgb-on-the-web-part-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("binjgb on the web"),t("OutboundLink")],1),e._v(" - Porting of the binjgb emulator to Web Assembly. "),t("a",{attrs:{href:"https://binji.github.io/2017/02/27/binjgb-on-the-web-part-2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("(Part 2)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://binji.github.io/2017/05/03/debugging-hangs.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("binjgb debugging hangs"),t("OutboundLink")],1),e._v(" - Investigations on emulations quirks")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gekkio/mooneye-gb/blob/master/docs/accuracy.markdown",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emulation Accuracy"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://gb-archive.github.io/salvage/decoding_gbz80_opcodes/Decoding%20Gamboy%20Z80%20Opcodes.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Decoding Gameboy Z80 opcodes"),t("OutboundLink")],1),e._v(" - How to algorithmically decode Game Boy instructions as opposed to writing one huge switch-case statement for over 500 instructions.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://djhworld.github.io/post/2018/09/21/i-ported-my-gameboy-color-emulator-to-webassembly/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Porting a GO Game Boy emulator to WebAssembly"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"testing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#testing","aria-hidden":"true"}},[e._v("#")]),e._v(" Testing")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://gbdev.gg8.se/files/roms/blargg-gb-tests/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Blargg's test roms"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://gekkio.fi/files/mooneye-gb/latest/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gekkio's test roms"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/LIJI32/SameSuite",target:"_blank",rel:"noopener noreferrer"}},[e._v("SameSuite"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://tasvideos.org/EmulatorResources/GBAccuracyTests.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("GB Accuracy Tests"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pinobatch/240p-test-mini/tree/master/gameboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("144p Test Suite"),t("OutboundLink")],1),e._v(" - Port of Artemio Urbina's 240p Test Suite to the Game Boy.")])]),e._v(" "),t("h3",{attrs:{id:"open-source-emulators"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#open-source-emulators","aria-hidden":"true"}},[e._v("#")]),e._v(" Open Source Emulators")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Name")]),e._v(" "),t("th",[e._v("Language")]),e._v(" "),t("th",[e._v("Details")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/binji/binjgb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Binjgb"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C")]),e._v(" "),t("td",[e._v("5kloc emulator that passes most of the tests. "),t("em",[e._v("Rewind")]),e._v(" feature. Runs in the browser using WebAssembly")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/arrow-lang/wadatsumi",target:"_blank",rel:"noopener noreferrer"}},[e._v("Wadatsumi"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Arrow")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/jkbenaim/cboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("cboy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/Dhole/miniBoy",target:"_blank",rel:"noopener noreferrer"}},[e._v("miniBoy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/LIJI32/SameBoy",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sameboy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/AntonioND/giibiiadvance",target:"_blank",rel:"noopener noreferrer"}},[e._v("giibiiadvance"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C")]),e._v(" "),t("td",[e._v("A GB, GBC emulator with GB Camera support.")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/mgba-emu/mgba",target:"_blank",rel:"noopener noreferrer"}},[e._v("mGBA"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C")]),e._v(" "),t("td",[e._v("A modern cross platform GBA emulator which also runs GB/GBC games.")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/rofl0r/gnuboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("gnuboy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C")]),e._v(" "),t("td",[e._v("ANSI C")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/RossMeikleham/PlutoBoy",target:"_blank",rel:"noopener noreferrer"}},[e._v("PlutoBoy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C")]),e._v(" "),t("td",[e._v("Cross platform (Windows, OSX, Linux/Unix, Android, iOS, Web Browsers, and Sony PSP) emulator")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://code.foxkit.us/emulators/supergameherm",target:"_blank",rel:"noopener noreferrer"}},[e._v("SuperGameHerm"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C 11")]),e._v(" "),t("td",[e._v("Cross platform emulator")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/kosinw/Castor",target:"_blank",rel:"noopener noreferrer"}},[e._v("Castor"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C#, Monogame")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/Drenn1/GameYob",target:"_blank",rel:"noopener noreferrer"}},[e._v("GameYob"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C++, C#")]),e._v(" "),t("td",[e._v("GB, GBC emulator for Nintendo DS/3DS")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/jgilchrist/emulator",target:"_blank",rel:"noopener noreferrer"}},[e._v("jgilchrist"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C++")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/nnarain/gameboycore",target:"_blank",rel:"noopener noreferrer"}},[e._v("gameboycore"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C++ 11")]),e._v(" "),t("td",[e._v("C++ emulation backend. Dependency free library.")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/Salgat/GameBoyEmulator-GBS",target:"_blank",rel:"noopener noreferrer"}},[e._v("GameBoyEmulator-GBS"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C++ 14")]),e._v(" "),t("td",[e._v("with a single library dependency of SFML")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/oneup40/oneup-gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("oneup-gb"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C++")]),e._v(" "),t("td",[e._v("DMG. Currently provides SDL frontend and Retroarch integration")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/drhelius/Gearboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gearboy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C++")]),e._v(" "),t("td",[e._v("iOS, Raspberry Pi, Mac, Windows and Linux")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/bitbank2/sg_free",target:"_blank",rel:"noopener noreferrer"}},[e._v("SmartGear"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C++, SDL2")]),e._v(" "),t("td",[e._v("Focus on optimized performance for resource-limited devices. GTK or direct framebuffer build")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/Jonazan2/PatBoy",target:"_blank",rel:"noopener noreferrer"}},[e._v("PatBoy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C++, SDL2")]),e._v(" "),t("td",[e._v("with a fully functional visual debugger")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/Dooskington/GameLad",target:"_blank",rel:"noopener noreferrer"}},[e._v("GameLad"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C++/SDL")]),e._v(" "),t("td",[e._v("Almost fully featured emulator")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/shonumi/gbe-plus",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBE+"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C++, SDL")]),e._v(" "),t("td",[e._v("Focused on enhancements")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/tzlion/hhugboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("hhugboy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("C++")]),e._v(" "),t("td",[e._v("Windows, based on GEST v1.1.1 by TM, with added support for unlicensed mappers, Unicode filenames, screenshots and some other stuff")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/mstojcevich/ddmg",target:"_blank",rel:"noopener noreferrer"}},[e._v("DDMG"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("D")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/andreasjhkarlsson/fungbc",target:"_blank",rel:"noopener noreferrer"}},[e._v("FunGBC"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("F#")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/gonccalo/gameboyGO",target:"_blank",rel:"noopener noreferrer"}},[e._v("gameboyGO"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Go")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/djhworld/gomeboycolor",target:"_blank",rel:"noopener noreferrer"}},[e._v("gomeboycolor"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Go")]),e._v(" "),t("td",[e._v("Cross platform "),t("a",{attrs:{href:"http://djhworld.github.io/gomeboycolor/",target:"_blank",rel:"noopener noreferrer"}},[e._v("documented"),t("OutboundLink")],1),e._v(" emulator. "),t("a",{attrs:{href:"https://github.com/djhworld/gomeboycolor-wasm",target:"_blank",rel:"noopener noreferrer"}},[e._v("WASM"),t("OutboundLink")],1),e._v(" port.")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/pedrovgs/AndroidGameBoyEmulator",target:"_blank",rel:"noopener noreferrer"}},[e._v("AndroidGameBoyEmulator"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Java")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/trekawek/coffee-gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Coffee GB"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Java 8")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/rauchg/weplay",target:"_blank",rel:"noopener noreferrer"}},[e._v("weplay"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("JavaScript")]),e._v(" "),t("td",[e._v("Collaborative Game Boy emulation")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/ericgramgb/GBRE",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBRE"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("JavaScript")]),e._v(" "),t("td",[e._v("GB Runtime Environment for iOS (iOS Safari and Chrome)")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/taisel/gameboy-Online",target:"_blank",rel:"noopener noreferrer"}},[e._v("gameboy-Online"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("JavaScript")]),e._v(" "),t("td",[e._v("Uses HTML5 canvas and JavaScript audio APIs")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/nakardo/node-gameboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("node-gameboy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Node.js")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/gabrielrcouto/php-terminal-gameboy-emulator",target:"_blank",rel:"noopener noreferrer"}},[e._v("php-terminal-Game Boy-emulator"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("PHP")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/Baekalfen/PyBoy",target:"_blank",rel:"noopener noreferrer"}},[e._v("PyBoy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Python")]),e._v(" "),t("td",[e._v("Mac, Linux and Windows")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/rep-nop/barnacleboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("barnacleboy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Rust")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/simias/gb-rs",target:"_blank",rel:"noopener noreferrer"}},[e._v("gb-rs"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Rust")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/tompko/scimitar",target:"_blank",rel:"noopener noreferrer"}},[e._v("scimitar"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Rust")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/VelocityRa/rustboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("rustboy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Rust")]),e._v(" "),t("td",[e._v("A basic DMG emulator written in Rust, using the Piston engine for window creation and graphics")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/Ben10do/Gambattye",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gambattye"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Swift")]),e._v(" "),t("td",[e._v("macOS, powered by a fork of Gambatte")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/torch2424/wasmBoy",target:"_blank",rel:"noopener noreferrer"}},[e._v("wasmBoy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Web Assembly (AssemblyScript)")]),e._v(" "),t("td",[e._v("GB/GBC "),t("em",[e._v("Library")]),e._v(" written for Web Assembly using AssemblyScript. Shell/Debugger in Preact.")])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/torch2424/vaperBoy",target:"_blank",rel:"noopener noreferrer"}},[e._v("vaporBoy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Javascript")]),e._v(" "),t("td",[e._v("PWA. Powered by "),t("a",{attrs:{href:"https://github.com/torch2424/wasmBoy",target:"_blank",rel:"noopener noreferrer"}},[e._v("wasmBoy"),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/Malax/elmboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("elmBoy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Elm")]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://github.com/Humpheh/goboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("goboy"),t("OutboundLink")],1)]),e._v(" "),t("td",[e._v("Go")]),e._v(" "),t("td")])])]),e._v(" "),t("h2",{attrs:{id:"software-development"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#software-development","aria-hidden":"true"}},[e._v("#")]),e._v(" Software Development")]),e._v(" "),t("p",[e._v("The "),t("a",{attrs:{href:"https://gist.github.com/ISSOtm/4f4d335c3fd258ad0dfc7d4d615409fd",target:"_blank",rel:"noopener noreferrer"}},[e._v("To C Or Not To C"),t("OutboundLink")],1),e._v(" essay  gives an overview of the Game Boy's capabilities, discussing the pros and cons of the available development tools, and providing tips to write more efficient code.")]),e._v(" "),t("h3",{attrs:{id:"assemblers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assemblers","aria-hidden":"true"}},[e._v("#")]),e._v(" Assemblers")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/rednex/rgbds",target:"_blank",rel:"noopener noreferrer"}},[e._v("RGBDS"),t("OutboundLink")],1),e._v(" - Assembler and linker package. "),t("a",{attrs:{href:"https://rednex.github.io/rgbds/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Documentation"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/csoren/asmotor",target:"_blank",rel:"noopener noreferrer"}},[e._v("ASMotor"),t("OutboundLink")],1),e._v(" - Assembler engine and development system targeting Game Boy, among other CPUs. Written by the original RGBDS author. "),t("a",{attrs:{href:"https://github.com/csoren/asmotor/blob/develop/doc/documentation.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Documentation"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/vhelin/wla-dx",target:"_blank",rel:"noopener noreferrer"}},[e._v("wla-dx"),t("OutboundLink")],1),e._v(" - Yet Another GB-Z80/Z80/.. Multi Platform Cross Assembler Package. "),t("a",{attrs:{href:"http://www.villehelin.com/wla.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("Documentation"),t("OutboundLink")],1),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"compilers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compilers","aria-hidden":"true"}},[e._v("#")]),e._v(" Compilers")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://gbdk.sourceforge.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBDK"),t("OutboundLink")],1),e._v(" - A set of tools that enable to develop in "),t("strong",[e._v("C")]),e._v(". Includes a set of libraries for the most common requirements and generates ready ROM files. "),t("a",{attrs:{href:"http://gbdk.sourceforge.net/doc/gbdk-doc.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Documentation"),t("OutboundLink")],1),e._v(".\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/x43x61x69/gbdk-osx",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbdk-osx"),t("OutboundLink")],1),e._v(" - Patched GBDK 2.96a for the latest compilers on OS X.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rotmoset/gbdk-n",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbdk-n"),t("OutboundLink")],1),e._v(" - Aims to update the gbdk libraries to be compatible with new versions of SDCC and provide helpers for building roms. Does not support ROM banking, thus limiting ROM size to 32K.")])])])]),e._v(" "),t("h4",{attrs:{id:"experimental-proof-of-concepts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#experimental-proof-of-concepts","aria-hidden":"true"}},[e._v("#")]),e._v(" Experimental/Proof of Concepts")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/wiz-lang/wiz",target:"_blank",rel:"noopener noreferrer"}},[e._v("Wiz"),t("OutboundLink")],1),e._v(" - A high-level assembly language for writing homebrew on retro console platforms (Game Boy, NES, Atari 2600, and more).")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ams-hackers/gbforth",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbforth"),t("OutboundLink")],1),e._v(" - A Forth-based Game Boy development kit.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/BonsaiDen/gbasm",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbasm"),t("OutboundLink")],1),e._v(" - A JavaScript based compiler for Game Boy z80 assembly code.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.tni.nl/products/tniasm.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("tniASM"),t("OutboundLink")],1),e._v(" - Macro Assembler.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ulrikdamm/Assembler",target:"_blank",rel:"noopener noreferrer"}},[e._v("Assembler"),t("OutboundLink")],1),e._v(" - Assembler written in Swift.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Bevinsky/llvm-gbz80",target:"_blank",rel:"noopener noreferrer"}},[e._v("llvm-gbz80"),t("OutboundLink")],1),e._v(" / "),t("a",{attrs:{href:"https://github.com/Bevinsky/clang-gbz80",target:"_blank",rel:"noopener noreferrer"}},[e._v("clang-gbz80"),t("OutboundLink")],1),e._v(" - Clang/LLVM port to the GBZ80 CPU (similar to the deprecated "),t("a",{attrs:{href:"https://github.com/euclio/llvm-gbz80",target:"_blank",rel:"noopener noreferrer"}},[e._v("euclio/llvm-gbz80"),t("OutboundLink")],1),e._v(").")])]),e._v(" "),t("h3",{attrs:{id:"emulators"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emulators","aria-hidden":"true"}},[e._v("#")]),e._v(" Emulators")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://bgb.bircd.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("BGB"),t("OutboundLink")],1),e._v(" - Powerful emulator and debugger. Provides an accurate hardware emulation.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/LIJI32/SameBoy",target:"_blank",rel:"noopener noreferrer"}},[e._v("SameBoy"),t("OutboundLink")],1),e._v(" - Accurate emulator with a wide range of powerful debugging features.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Gekkio/mooneye-gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mooneye GB"),t("OutboundLink")],1),e._v(" - Research project and emulator in Rust.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mgba-emu/mgba",target:"_blank",rel:"noopener noreferrer"}},[e._v("mGBA"),t("OutboundLink")],1),e._v(" - Modern cross platform GBA emulator which also runs GB/GBC games.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/binji/binjgb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Binjgb"),t("OutboundLink")],1),e._v(" - 5Kloc emulator that passes most of the tests. "),t("em",[e._v("Rewind")]),e._v(" feature. Runs in the browser using WebAssembly.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sinamas/gambatte",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gambatte"),t("OutboundLink")],1),e._v(" - Cross-platform and accurate emulator.")])]),e._v(" "),t("p",[t("router-link",{attrs:{to:"/EMULATORS.html"}},[e._v("Complete list of open source emulators")])],1),e._v(" "),t("h3",{attrs:{id:"tools"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tools","aria-hidden":"true"}},[e._v("#")]),e._v(" Tools")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/Zal0/ZGB",target:"_blank",rel:"noopener noreferrer"}},[e._v("ZGB"),t("OutboundLink")],1),e._v(" - A little engine for creating games for the original Game Boy (expands gbdk, more info "),t("a",{attrs:{href:"http://zalods.blogspot.com/2017/01/zgb-little-engine-for-game-boy.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(").")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/DevEd2/DevSound",target:"_blank",rel:"noopener noreferrer"}},[e._v("DevSound"),t("OutboundLink")],1),e._v(" - Sound driver embeddable in homebrews which supports pulse width manipulation, arpeggios, and multiple waveforms.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gbdev.gg8.se/files/musictools/Aleksi%20Eeben/Carillon%20Editor.zip",target:"_blank",rel:"noopener noreferrer"}},[e._v("Carillon Player"),t("OutboundLink")],1),e._v(" - Music Engine for Game Boy & Game Boy Color.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/chrisantonellis/gbtdg",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy Tile Data Generator"),t("OutboundLink")],1),e._v(" - HTML5 / JS web application that will convert bitmap images to hexadecimal data appropriate for use in tile based graphical applications, specifically GB.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.devrs.com/gb/hmgd/intro.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Harry Mulder's GB Development"),t("OutboundLink")],1),e._v(" - Some sources and home of Game Boy Tile Designer and Game Boy Map Builder tools.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bashaus/gbtiles",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBTiles"),t("OutboundLink")],1),e._v(" - Converts .GBR files created with Harry Mulder's Tile Designer (GBTD) and .GBM files created with Harry Mulder's Map Builder (GBMB) to different formats for use with the Game Boy and GBDK.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/AntonioND/gbt-player",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBT PLAYER"),t("OutboundLink")],1),e._v(" - A music player library and converter kit for Game Boy that can be used with RGBDS.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://catskull.net/GB-Logo-Generator/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ROM Header Utility"),t("OutboundLink")],1),e._v(" - An online tool to inspect and modify a ROM's header data, including the logo.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jkbenaim/gbcamextract",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbcamextract"),t("OutboundLink")],1),e._v(" - Extracts photos from Game Boy Camera saves.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.tensi.eu/thomas/programming/gameboy/gbextended.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBExtended"),t("OutboundLink")],1),e._v(" - C library extending gbdk.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gitendo/bmp2cgb",target:"_blank",rel:"noopener noreferrer"}},[e._v("bmp2cgb"),t("OutboundLink")],1),e._v(" - Graphics converter for Game Boy Color development providing real time palette adjustments.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/LuckyLights/png2gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("png2gb"),t("OutboundLink")],1),e._v(" - CLI tool to convert image file to game boy .c array.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ProGM/gbdk-lib-extension",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbdk-lib-extension"),t("OutboundLink")],1),e._v(" - A small set of sources and tools for the Game Boy Development Kit by Michael Hope.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/exezin/gb-convert",target:"_blank",rel:"noopener noreferrer"}},[e._v("GB-convert"),t("OutboundLink")],1),e._v(" - Game Boy tile conversion and map editor tool (converts to assembly).")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Palmr/cart-dumper",target:"_blank",rel:"noopener noreferrer"}},[e._v("cart-dumper"),t("OutboundLink")],1),e._v(" - Game Boy Cartridge Dumper ROM.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/svendahlstrand/game-boy-lcd-sniffing",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy LCD sniffing"),t("OutboundLink")],1),e._v(" - Sniff your Game Boy's LCD using a logic analyzer.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.dotmatrixgame.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dot Matrix Game Editor"),t("OutboundLink")],1),e._v(" - An IDE for Game Boy programming in a C-like language called GBL, with many other features like tile and map extraction, WLA-DX assembly, and more.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://make.vg/brewtool/",target:"_blank",rel:"noopener noreferrer"}},[e._v("brewtool"),t("OutboundLink")],1),e._v(" - A collection of primitive editor/converter tools for making assets used with homebrew ROM development.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/raphaklaus/gameboy-text-tools",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy Text Tools"),t("OutboundLink")],1),e._v(" - Set of tools for text manipulation and translation of Game Boy ROMs written in NodeJS")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/SimonLarsen/mmlgb",target:"_blank",rel:"noopener noreferrer"}},[e._v("mmlgb"),t("OutboundLink")],1),e._v(" - A MML parser and GBDK sound driver for the Nintendo Game Boy.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bazzinotti/XPMCK",target:"_blank",rel:"noopener noreferrer"}},[e._v("XPMCK"),t("OutboundLink")],1),e._v(" - An MML-based music compiler with support for Game Boy & Game Boy Color.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattcurrie/mgbdis",target:"_blank",rel:"noopener noreferrer"}},[e._v("mgbdis"),t("OutboundLink")],1),e._v(" - Game Boy ROM disassembler with RGBDS compatible output.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://bitbucket.org/HellSuffering/retr0-gb/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Retr0 GB"),t("OutboundLink")],1),e._v(" - An engine for creating games (expands GBDK).")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/devdri/awake",target:"_blank",rel:"noopener noreferrer"}},[e._v("awake"),t("OutboundLink")],1),e._v(" - Game Boy decompiler.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sanqui/swapdump",target:"_blank",rel:"noopener noreferrer"}},[e._v("swapdump"),t("OutboundLink")],1),e._v(" - Diagnostic utility for Game Boy flashcarts.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/JustinLloyd/Gameboy-LinkUp",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gameboy-LinkUp"),t("OutboundLink")],1),e._v(" - Game Boy LinkUp serial cable networking project.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/paul-arutyunov/vtGBte",target:"_blank",rel:"noopener noreferrer"}},[e._v("vtGBte"),t("OutboundLink")],1),e._v(" - A minimalistic ncurses tile editor.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/TwitchPlaysPokemon/tpp1",target:"_blank",rel:"noopener noreferrer"}},[e._v("tpp1"),t("OutboundLink")],1),e._v(" - Definition and specification of a custom GB/GBC memory/hardware mapper, as a functional superset of MBC.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/delwink/libstdgb",target:"_blank",rel:"noopener noreferrer"}},[e._v("libstdgb"),t("OutboundLink")],1),e._v(" - A C library of useful Game Boy operations (SDCC).")])]),e._v(" "),t("h2",{attrs:{id:"programming"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#programming","aria-hidden":"true"}},[e._v("#")]),e._v(" Programming")]),e._v(" "),t("p",[e._v("Guides, tutorials and tools to develop software for Game Boy using the development toolchains described in the "),t("a",{attrs:{href:"#software-development"}},[e._v("Software Development")]),e._v(" chapter.")]),e._v(" "),t("h3",{attrs:{id:"asm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#asm","aria-hidden":"true"}},[e._v("#")]),e._v(" ASM")]),e._v(" "),t("ul",[t("li",[t("strong",[t("a",{attrs:{href:"https://eldred.fr/gb-asm-tutorial",target:"_blank",rel:"noopener noreferrer"}},[e._v("gb asm tutorial"),t("OutboundLink")],1)]),e._v(" - Step by step tutorial, building several ROMs to accompany its explanations.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gameboy.mongenel.com/asmschool.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ASMSchool"),t("OutboundLink")],1),e._v(" - A set of lessons by Duo about coding in Assembly for GB/GBC and disassembling.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tobiasvl/hardware.inc",target:"_blank",rel:"noopener noreferrer"}},[e._v("hardware.inc"),t("OutboundLink")],1),e._v(" - Standard include file containing Game Boy hardware definitions for use in RGBDS projects.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://gb-archive.github.io/salvage/tutorial_de_ensamblador/tutorial_de_ensamblador%20%5BLa%20decadence%5D.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Assembly tutorial by David Pello"),t("OutboundLink")],1),e._v(" - Good document to learn to produce working asm code for gb. Brief explanations of many important topics. Many examples with commented source code.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/assemblydigest/gameboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("assemblydigest"),t("OutboundLink")],1),e._v(" - Exploring Game Boy programming techniques:\n"),t("ul",[t("li",[t("a",{attrs:{href:"http://assemblydigest.tumblr.com/post/77203696711/tutorial-making-an-empty-game-boy-rom-in-wiz",target:"_blank",rel:"noopener noreferrer"}},[e._v("Making an Empty Game Boy ROM (in Wiz)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://assemblydigest.tumblr.com/post/77404621743/tutorial-making-art-for-the-game-boy",target:"_blank",rel:"noopener noreferrer"}},[e._v("Making Art for the Game Boy"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("a",{attrs:{href:"http://web.archive.org/web/20150511145100/http://www.bennvenn.com/Beginners_Guide_To_Reverse_Engineering.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Beginner's Guide to Reverse Engineering GB"),t("OutboundLink")],1),e._v(" - Some starting tips on disassembling and reverse engineering.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://voidptr.io/blog/2017/01/21/GameBoy.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("FlappyBoy: Making a simple Game Boy Game"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://imanoleasgames.blogspot.no/2016/12/games-aside-1-super-game-boy.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Super Game Boy development"),t("OutboundLink")],1),e._v(" - Step by step tutorial to implement Super Game Boy features (frame and palettes).")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://peterwynroberts.com/?p=10",target:"_blank",rel:"noopener noreferrer"}},[e._v("GameBoy programming tutorial: Hello World!"),t("OutboundLink")],1),e._v(" - Step by step tutorial.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/lancekindle/DMGreport",target:"_blank",rel:"noopener noreferrer"}},[e._v("DMGreport"),t("OutboundLink")],1),e._v(" - Game programming tutorials in assembly.")])]),e._v(" "),t("h4",{attrs:{id:"sources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sources","aria-hidden":"true"}},[e._v("#")]),e._v(" Sources")]),e._v(" "),t("p",[e._v("Fragments of code, effects, proof of concepts and generally non complete games.")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://www.devrs.com/gb/asmcode.php",target:"_blank",rel:"noopener noreferrer"}},[e._v("dev'rs ASM section"),t("OutboundLink")],1),e._v(" - A lot of working demos and sources.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/EmmaEwert/gameboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("EmmaEwert's experiments"),t("OutboundLink")],1),e._v(" - A collection of prototype programs, mostly just toying around. Among others, a daylight effect, transparency and a weather effect.")])]),e._v(" "),t("h4",{attrs:{id:"timings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#timings","aria-hidden":"true"}},[e._v("#")]),e._v(" Timings")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://exez.in/gameboy-dma",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy DMA transfer routines"),t("OutboundLink")],1),e._v(" - Understanding and using DMA routines.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://blog.kevtris.org/blogfiles/Nitty%20Gritty%20Gameboy%20VRAM%20Timing.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nitty Gritty Gameboy Cycle Timing"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.reddit.com/r/EmuDev/comments/59pawp/gb_mode3_sprite_timing/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mode3 Sprite Timing"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gameboy.mongenel.com/dmg/gbc_dma_transfers.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("GameBoy Color DMA-Transfers v0.0.1"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gameboy.mongenel.com/dmg/istat98.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("STAT interrupt timings"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jdeblese/gbcpu/wiki/Video-Timing",target:"_blank",rel:"noopener noreferrer"}},[e._v("Video Timing"),t("OutboundLink")],1)])]),e._v(" "),t("h4",{attrs:{id:"boilerplates"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#boilerplates","aria-hidden":"true"}},[e._v("#")]),e._v(" Boilerplates")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/exezin/gb-template",target:"_blank",rel:"noopener noreferrer"}},[e._v("gb-template"),t("OutboundLink")],1),e._v(" - A template with basic functions such as joypad input, DMA transfers, and map/tile data loading.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/nezticle/rgbds-template",target:"_blank",rel:"noopener noreferrer"}},[e._v("rgbds-template"),t("OutboundLink")],1),e._v(" - Basic hello-world example for Game Boy using RGBDS.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.devrs.com/gb/files/galp.zip",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy Assembly Language Primer"),t("OutboundLink")],1),e._v(" - Simple template code with memory defines, copy routines and IBM font tilemap.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/yenatch/bootstrap.gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("bootstrap.gb"),t("OutboundLink")],1),e._v(" - An example Game Boy project.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/junebug12851/GameboyBoilerplateProj",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gameboy Boilerplate"),t("OutboundLink")],1),e._v(" - Boilerplate project to move quicker into the actual assembly code for your game.")])]),e._v(" "),t("h4",{attrs:{id:"syntax-highlighting-packages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#syntax-highlighting-packages","aria-hidden":"true"}},[e._v("#")]),e._v(" Syntax highlighting packages")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://atom.io/packages/language-rgbasm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Atom language package for RGBASM"),t("OutboundLink")],1),e._v(" - Atom syntax highlighting for RGBDS assembly.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ISSOtm/gbz80-highlight",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbz80-highlight"),t("OutboundLink")],1),e._v(" - Notepad++ and gedit syntax highlighting files for RGBDS assembly.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.vim.org/scripts/script.php?script_id=819",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vim syntax file for the Game Boy assembler RGBASM"),t("OutboundLink")],1),e._v(" - Vim syntax highlighting for RGBDS assembly.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Leandros/dotfiles/blob/master/.vim/syntax/rgbds.vim",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vim syntax file for RGBDS"),t("OutboundLink")],1),e._v(" - Another Vim syntax highlighting file for RGBDS assembly.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Bananattack/rgbds_textmate",target:"_blank",rel:"noopener noreferrer"}},[e._v("rgbds_textmate"),t("OutboundLink")],1),e._v(" - Some syntax highlighting rules for coding in Z80 assembly as a Textmate language plugin. Works in Sublime Text 2 and 3. The syntax is particularly designed for RGBDS and Game Boy-specific Z80 instructions.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Imanolea/z80asm-vscode",target:"_blank",rel:"noopener noreferrer"}},[e._v("Z80 Assembly support for Visual Studio Code"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/DonaldHays/rgbds-vscode",target:"_blank",rel:"noopener noreferrer"}},[e._v("rgbds-vscode"),t("OutboundLink")],1),e._v(" - Visual Studio Code language extension for RGBDS GBZ80 Assembly")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/japanoise/rgbds-mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("rgbds-mode"),t("OutboundLink")],1),e._v(" - Emacs major mode for RGBDS assembly.")])]),e._v(" "),t("h3",{attrs:{id:"c"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c","aria-hidden":"true"}},[e._v("#")]),e._v(" C")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://belial.blarzwurst.de/gbpaper/paper.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("8-Bit Wonderland"),t("OutboundLink")],1),e._v(" - Well-written introductory document about how the Game Boy works and how to start developing working code for it.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gbdk-salvage/grooves-game-boy-programming",target:"_blank",rel:"noopener noreferrer"}},[e._v("Grooves Game Boy Programming"),t("OutboundLink")],1),e._v(" - A complete set of lessons about implementing various game mechanics in a Game Boy game.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://pastebin.com/F3tHLj68",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to Write a Simple Side Scrolling Game"),t("OutboundLink")],1),e._v(" - Old (but still relevant) tutorial.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://pastebin.com/gzT47MPJ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Just another simple tutorial"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://refreshgames.co.uk/2016/04/18/gameboy-tutorial-rom/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBDK Tutorial"),t("OutboundLink")],1),e._v(" - Fairly minimal game demo for getting started with GBDK.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gbdev.gg8.se/wiki/articles/GBDK_Sprite_Tutorial",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBDK Sprite"),t("OutboundLink")],1),e._v(" - Presents a workflow for getting multiple sprites to display and animate.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gbdev.gg8.se/wiki/articles/GBDK_Color_Tutorial",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBDK Color"),t("OutboundLink")],1),e._v(" - Extends your knowledge of basic spriting on the Game Boy by adding colors to sprites, backgrounds and the window layer.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gbdev.gg8.se/wiki/articles/GBDK_Joypad_Tutorial",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBDK Joypad"),t("OutboundLink")],1),e._v(" - Details the use of the joypad with GBDK.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.personal.triticom.com/~erm/GameBoy/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy home of Flavor"),t("OutboundLink")],1),e._v(" - Some full games and sources.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://videlais.com/2016/07/03/programming-game-boy-games-using-gbdk-part-1-configuring-programming-and-compiling/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBDK Configuring and Programming Tutorial"),t("OutboundLink")],1),e._v(" - Configuring GBDK, Using Tiles, Colliding Sprites, GBTD, GBMB, Memory Management and ROM Banking.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mrombout/gbdk_playground",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simplified GBDK examples"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLeEj4c2zF7PaFv5MPYhNAkBGrkx4iPGJo",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBDK Programming Video Tutorials"),t("OutboundLink")],1),e._v(" - A series of video tutorials introducing beginners to programming with GBDK")])]),e._v(" "),t("h2",{attrs:{id:"homebrews"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#homebrews","aria-hidden":"true"}},[e._v("#")]),e._v(" Homebrews")]),e._v(" "),t("p",[e._v("Complete and open source games.")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://gbhh.avivace.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Homebrew Hub"),t("OutboundLink")],1),e._v(" - Every unofficial homebrew ever produced for Game Boy playable online (mobile/touch too): a community-lead attempt to collect, archive and save every unofficial game, homebrew, demo, patch, hackrom for Game Boy (Color) produced by the community through years of passionate work.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/infinity-gbc/infinity",target:"_blank",rel:"noopener noreferrer"}},[e._v("Infinity"),t("OutboundLink")],1),e._v(" - RPG developed by Affinix Software primarily between the years 1999 and 2001. The game never found a publisher and was eventually canceled. Got recently released with the full source, development tools and workflows.")])]),e._v(" "),t("h3",{attrs:{id:"asm-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#asm-2","aria-hidden":"true"}},[e._v("#")]),e._v(" ASM")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/BonsaiDen/Tuff.gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tuff"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Sanqui/2048-gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("2048-gb"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://bitbucket.org/Sanqui/snake/src/?at=master",target:"_blank",rel:"noopener noreferrer"}},[e._v("Snake"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/siObyte/PlantBoy",target:"_blank",rel:"noopener noreferrer"}},[e._v("PlantBoy"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/huderlem/lazerpong",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lazerpong"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/AntonioND/geometrix",target:"_blank",rel:"noopener noreferrer"}},[e._v("Geometrix"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/AntonioND/ucity",target:"_blank",rel:"noopener noreferrer"}},[e._v("µCity"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mholtkamp/carazu",target:"_blank",rel:"noopener noreferrer"}},[e._v("Carazu"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/DonaldHays/snake-gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("Snake-gb"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/furrtek/GB303",target:"_blank",rel:"noopener noreferrer"}},[e._v("GB303"),t("OutboundLink")],1),e._v(" - GB303 wavetable-based TB-303 style synthesizer for the Nintendo Game Boy.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/JustSid/Sushi",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sushi"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bitnenfer/flappy-boy-asm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flappy-boy-asm"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dubvulture/gbdev",target:"_blank",rel:"noopener noreferrer"}},[e._v("kupman"),t("OutboundLink")],1),e._v(" and some other projects")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tbsp/Adjustris",target:"_blank",rel:"noopener noreferrer"}},[e._v("Adjustris"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/exezin/exeman/",target:"_blank",rel:"noopener noreferrer"}},[e._v("exeman"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ISSOtm/Aevilia-GB",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aevilia"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Kartones/gameboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBSlides"),t("OutboundLink")],1),e._v(" - A simple Game Boy Powerpoint-like slides viewer.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dannye/pokered-gbc",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pokered-gbc"),t("OutboundLink")],1),e._v(" - Pokémon Red remade with full GBC support.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tslanina/Retro-GameBoyColor-ToyToy",target:"_blank",rel:"noopener noreferrer"}},[e._v("ToyToy"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tslanina/Retro-GameBoyColor-StefaN",target:"_blank",rel:"noopener noreferrer"}},[e._v("StefaN"),t("OutboundLink")],1),e._v(" - Fourway Breakout clone.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/tslanina/Retro-GameBoyColor-Galaxia",target:"_blank",rel:"noopener noreferrer"}},[e._v("Galaxia"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sanqui/desgb",target:"_blank",rel:"noopener noreferrer"}},[e._v("desgb"),t("OutboundLink")],1),e._v(" - DES encryption.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/l0k1/superhappyfunbubbletime",target:"_blank",rel:"noopener noreferrer"}},[e._v("superhappyfunbubbletime"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/lancekindle/minesweepGB",target:"_blank",rel:"noopener noreferrer"}},[e._v("minesweepGB"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pinobatch/libbet",target:"_blank",rel:"noopener noreferrer"}},[e._v("Libbet and the Magic Floor"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/dannye/waveform-gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("waveform-gb"),t("OutboundLink")],1),e._v(" - Program visualizing the wave form used by the wave channel. The wave form can be edited freely and playback of the wave is updated immediately.")])]),e._v(" "),t("h3",{attrs:{id:"c-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-2","aria-hidden":"true"}},[e._v("#")]),e._v(" C")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/bitnenfer/FlappyBoy",target:"_blank",rel:"noopener noreferrer"}},[e._v("FlappyBoy"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pashutk/flappybird-gameboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("flappybird-gameboy"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gb-archive/fbgb",target:"_blank",rel:"noopener noreferrer"}},[e._v("fbgb"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://ludumdare.com/compo/ludum-dare-34/?action=preview&uid=6823",target:"_blank",rel:"noopener noreferrer"}},[e._v("Novascape"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cppchriscpp/SquishyTheTurtle",target:"_blank",rel:"noopener noreferrer"}},[e._v("Squishy the Turtle"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/avivace/quadratino",target:"_blank",rel:"noopener noreferrer"}},[e._v("Quadratino"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/elfgames/doctorhow",target:"_blank",rel:"noopener noreferrer"}},[e._v("Doctor How"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Zal0/gbjam2016",target:"_blank",rel:"noopener noreferrer"}},[e._v("Super Princess' 2092 Exodus"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/brovador/GBsnake",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBsnake"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/andreasjhkarlsson/gb-mines",target:"_blank",rel:"noopener noreferrer"}},[e._v("gb-mines"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.atari2600land.com/gameboy/oranges.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("oranges"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Imanolea/bitbitjam3_red_hot_princess_carnage",target:"_blank",rel:"noopener noreferrer"}},[e._v("red hot princess carnage"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.tensi.eu/thomas/programming/gameboy/loderunner.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("loderunner"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://refreshgames.co.uk/2017/04/24/ludum-dare-38-entry-hives/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hives"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/DonaldHays/bubblefactory",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bubble Factory"),t("OutboundLink")],1),e._v(" - "),t("em",[e._v("Vanilla")]),e._v(" SDCC (no gbdk).")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rubfi/gbc-atari-boxing",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBC Atari Boxing"),t("OutboundLink")],1),e._v(" - Atari 2600 Boxing clone for the Game Boy (Color).")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/haroldo-ok/really-old-stuff/tree/master/gameboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("GB raycaster, Vision-8"),t("OutboundLink")],1),e._v(" and some other projects")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/SimonLarsen/tobutobugirl",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tobu Tobu Girl"),t("OutboundLink")],1),e._v(" - An arcade platformer for the Game Boy.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://sebastianmihai.com/main.php?t=18&",target:"_blank",rel:"noopener noreferrer"}},[e._v("Burly Bear vs. The Mean Foxes"),t("OutboundLink")],1),e._v(" ("),t("a",{attrs:{href:"http://sebastianmihai.com/main.php?t=55&n=Gameboy-Color-development-Burly-Bear-vs-The-Mean-Foxes-GBC-version",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBC"),t("OutboundLink")],1),e._v(" port)")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/MasterIV/PostBot",target:"_blank",rel:"noopener noreferrer"}},[e._v("PostBot"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kanfor/gunsridersgameboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("Guns & Riders"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gingemonster/DinosOfflineAdventure",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dino's Offline Adventure"),t("OutboundLink")],1),e._v(" - A clone of the Google Chrome offline game")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/rnegron/dino-gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("dino-gb"),t("OutboundLink")],1),e._v(" - Another clone of the Chrome game")])]),e._v(" "),t("h3",{attrs:{id:"demos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demos","aria-hidden":"true"}},[e._v("#")]),e._v(" Demos")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/AntonioND/back-to-color",target:"_blank",rel:"noopener noreferrer"}},[e._v("Back to Color"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/vegard/beach-gbc",target:"_blank",rel:"noopener noreferrer"}},[e._v("beach-gbc"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mills32/CUTE_DEMO",target:"_blank",rel:"noopener noreferrer"}},[e._v("CUTE DEMO"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/svendahlstrand/10-print-game-boy",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("10 PRINT")]),e._v(" Game Boy"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/naavis/roboto-demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("Roboto Demo"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/wtjones/matrix-rain-gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("matrix-rain-gb"),t("OutboundLink")],1),e._v(" - A Matrix digital rain effect in assembler.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/LIJI32/GBVideoPlayer",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBVideoPlayer"),t("OutboundLink")],1),e._v(" - A technical demo demonstrating how the Game Boy LCD controller can be hacked to make a Game Boy Color play a full motion video in color, together with music.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/LIJI32/GBVideoPlayer2",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBVideoPlayer2"),t("OutboundLink")],1),e._v(" - The second iteration of the above demo, which increases the resolution, adds "),t("em",[e._v("stereo")]),e._v(" PCM audio, and introduces video compression.")])]),e._v(" "),t("h2",{attrs:{id:"reverse-engineering"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reverse-engineering","aria-hidden":"true"}},[e._v("#")]),e._v(" Reverse Engineering")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://ecc-comp.blogspot.it/2016/03/reverse-engineering-kirbys-dreamland-2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reverse engineering Kirby's Dreamland 2"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pret/pokemon-reverse-engineering-tools",target:"_blank",rel:"noopener noreferrer"}},[e._v("pokemontools"),t("OutboundLink")],1),e._v(" - a python module that provides various reverse engineering components for various Pokémon games.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.megabeets.net/reverse-engineering-a-gameboy-rom-with-radare2",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reverse Engineering a Gameboy ROM with radare2"),t("OutboundLink")],1),e._v(" - A walkthrough to reverse engineer a Game Boy ROM challenge using radare2.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://kemenaran.winosx.com/posts/category-disassembling-links-awakening/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Disassembling Link's Awakening"),t("OutboundLink")],1),e._v(" - A series of blog posts about disassembling Link's Awakening DX.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/h3nnn4n/Reverse-Engineering-the-GameBoy-Tetris",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reverse Engineering the GameBoy Tetris"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/avivace/awesome-gbdev/blob/master/articles/dma_hijacking.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("DMA hijacking"),t("OutboundLink")],1),e._v(" - A simple technique that allows you to run custom code in most GB/SGB/CGB games, provided you have an ACE exploit.")])]),e._v(" "),t("h3",{attrs:{id:"game-disassemblies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#game-disassemblies","aria-hidden":"true"}},[e._v("#")]),e._v(" Game Disassemblies")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/pret/pokered",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pokémon Red/Blue"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pret/pokecrystal",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pokémon Crystal"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pret/pokeyellow",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pokémon Yellow"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pret/pokegold",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pokémon Gold and Silver"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pret/pokepinball",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pokémon Pinball"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pret/poketcg",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pokémon TCG"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/pret/pokegold-spaceworld",target:"_blank",rel:"noopener noreferrer"}},[e._v("pokegold-spaceworld"),t("OutboundLink")],1),e._v(" - Pokémon Gold and Silver 1997 Space World demo.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mojobojo/LADX-Disassembly",target:"_blank",rel:"noopener noreferrer"}},[e._v("Link's Awakening DX"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/drenn1/ages-disasm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Oracle of Ages"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/osnr/tetris",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tetris"),t("OutboundLink")],1),e._v(" - Based on Jeff Frohwein's original disassembly.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/DevEd2/FXHammer-Disasm",target:"_blank",rel:"noopener noreferrer"}},[e._v("FX Hammer"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/sanqui/hm3",target:"_blank",rel:"noopener noreferrer"}},[e._v("Harvest Moon 3"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/TheFakeMateo/RedPlusPlus",target:"_blank",rel:"noopener noreferrer"}},[e._v("RedPlusPlus"),t("OutboundLink")],1),e._v(" - An upgrade to Pokémon Red. Fixes several bugs and adds a lot of new features.")])]),e._v(" "),t("h2",{attrs:{id:"related-projects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#related-projects","aria-hidden":"true"}},[e._v("#")]),e._v(" Related projects")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/trash80/Arduinoboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("ArduinoBoy"),t("OutboundLink")],1),e._v(" - Serial communication (MIDI) from an Arduino to the Game Boy for music applications such as LittleSoundDJ, Nanoloop, and mGB.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/diegovalverde/papiGB",target:"_blank",rel:"noopener noreferrer"}},[e._v("papiGB"),t("OutboundLink")],1),e._v(" - Game Boy Classic fully functional FPGA implementation from scratch.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/trun/fpgaboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("fpgaboy"),t("OutboundLink")],1),e._v(" - Implementation Nintendo's Game Boy console on an FPGA.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/danShumway/Piglet",target:"_blank",rel:"noopener noreferrer"}},[e._v("Piglet"),t("OutboundLink")],1),e._v(" - A LUA-driven AI that plays classic Game Boy color games using experimentation. In active development.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://web.archive.org/web/*/http://www.gatesboy.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gatesboy"),t("OutboundLink")],1),e._v(" - Non-gaming purposes applications development.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/PumpMagic/ostrich",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ostrich"),t("OutboundLink")],1),e._v(" - A Game Boy Sound System player written in Swift.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/trash80/mGB",target:"_blank",rel:"noopener noreferrer"}},[e._v("mGB"),t("OutboundLink")],1),e._v(" - A Game Boy cartridge program that enables the Game Boy to act as a full MIDI supported sound module.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/LIJI32/GBVisualizer",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBVisualizer"),t("OutboundLink")],1),e._v(" - Demonstrating the use of two undocumented Game Boy Color registers, nicknamed PCM12 (FF76) and PCM34 (FF77), which can be used to read the current PCM amplitude of the 4 APU channels.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/drhelius/arduinogameboy",target:"_blank",rel:"noopener noreferrer"}},[e._v("ArduinoGameBoy"),t("OutboundLink")],1),e._v(" - Arduino based Game Boy cartridge reader and writer.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bitnenfer/gameboy-brainfuck",target:"_blank",rel:"noopener noreferrer"}},[e._v("gameboy-brainfuck"),t("OutboundLink")],1),e._v(" - Brainf*ck interpreter.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/elseyf/gbfk",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbfk"),t("OutboundLink")],1),e._v(" - Brainf*ck interpreter, with input.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mattcurrie/gb-save-states",target:"_blank",rel:"noopener noreferrer"}},[e._v("gb-save-states"),t("OutboundLink")],1),e._v(" - Patches to add save state support to Game Boy games when playing on the original hardware.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jdeblese/gbcpu",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbcpu"),t("OutboundLink")],1),e._v(" - A CPU and peripherals implementing the Game Boy instruction set and functionality.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://youtube.com/watch?v=1lzHfLYzyRM",target:"_blank",rel:"noopener noreferrer"}},[e._v("Digitized Speech in Game Boy Games"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://dhole.github.io/post/gameboy_serial_1/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sniffing Game Boy serial traffic with an STM32F4"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://dhole.github.io/post/gameboy_serial_2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Virtual Game Boy Printer with an STM32F4"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://dhole.github.io/post/gameboy_serial_3/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Printing on the Game Boy Printer using an STM32F4"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://tilde.town/~minerobber/techwriteups/pokemonpc.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pokemon Pocket Computer:"),t("OutboundLink")],1),e._v(" - What is it and how to use it to make cheat codes.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://dhole.github.io/post/gameboy_custom_logo/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Booting the Game Boy with a custom logo"),t("OutboundLink")],1),e._v(" - Bypassing the Nintendo logo check.")]),e._v(" "),t("li",[e._v('Making a Game Boy game in 2017: A "Sheep It Up!" Post-Mortem ('),t("a",{attrs:{href:"https://www.gamasutra.com/blogs/DoctorLudos/20171207/311143/",target:"_blank",rel:"noopener noreferrer"}},[e._v("part 1"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://www.gamasutra.com/blogs/DoctorLudos/20180213/314554/",target:"_blank",rel:"noopener noreferrer"}},[e._v("part 2"),t("OutboundLink")],1),e._v(")")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://fuji.drillspirits.net/?post=87",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nintendo's fake logos"),t("OutboundLink")],1),e._v(" - Every cartridge has to show the authentic logo to be considered valid and be run, but obviously some companies managed to exploit the check system.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/stijnfrishert/liblsdj",target:"_blank",rel:"noopener noreferrer"}},[e._v("liblsdj"),t("OutboundLink")],1),e._v(" - Utility library for interacting with the LSDj save format (.sav), song files (.lsdsng) and more.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jkotlinski/lsdpatch",target:"_blank",rel:"noopener noreferrer"}},[e._v("lsdpatch"),t("OutboundLink")],1),e._v(" - Tool for modifying samples, fonts and palettes on LSDj ROM images.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ChaosCabbage/crazy-gameboy-video-experiments",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy video effects"),t("OutboundLink")],1),e._v(" - Some little experiments using the STAT interrupt to do funny video manipulations.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/ekimekim/gbos",target:"_blank",rel:"noopener noreferrer"}},[e._v("gbos"),t("OutboundLink")],1),e._v(" - A basic operating system for the Game Boy.")])]),e._v(" "),t("h3",{attrs:{id:"directories"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#directories","aria-hidden":"true"}},[e._v("#")]),e._v(" Directories")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://gbdev.gg8.se/files/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Archive of related files"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gb-archive",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Game Boy Archive"),t("OutboundLink")],1),e._v(" - A library of Game Boy related software, hardware and literature. Aimed to mirror and preserve old and fragmented contributions from the last three decades.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/gb-archive/salvage",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Game Boy Archive - Salvage"),t("OutboundLink")],1),e._v(" - Historical archive of software, old articles, FAQs and various documents.")])]),e._v(" "),t("h3",{attrs:{id:"websites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websites","aria-hidden":"true"}},[e._v("#")]),e._v(" Websites")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://gbdk-developers.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GBDK Developers"),t("OutboundLink")],1),e._v(" - Active blog about everything related to the scene. Including features, insights and interviews.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://pdroms.de/news/gameboy/",target:"_blank",rel:"noopener noreferrer"}},[e._v("pdroms.de"),t("OutboundLink")],1),e._v(" Game Boy releases.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://gameboy.modermodemet.se/en",target:"_blank",rel:"noopener noreferrer"}},[e._v("Game Boy Demospotting"),t("OutboundLink")],1),e._v(" - A collection of demos.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://hhug.me",target:"_blank",rel:"noopener noreferrer"}},[e._v("Handheld Underground"),t("OutboundLink")],1),e._v(" - Unlicensed games, blog posts about Game Boy, home of the hhugboy emulator.")])]),e._v(" "),t("h2",{attrs:{id:"about"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#about","aria-hidden":"true"}},[e._v("#")]),e._v(" About")]),e._v(" "),t("h3",{attrs:{id:"contribute"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contribute","aria-hidden":"true"}},[e._v("#")]),e._v(" Contribute")]),e._v(" "),t("p",[e._v("Take a look at "),t("router-link",{attrs:{to:"/CONTRIBUTING.html"}},[e._v("Contribution Guidelines")]),e._v(".")],1),e._v(" "),t("h3",{attrs:{id:"license"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[e._v("#")]),e._v(" License")]),e._v(" "),t("p",[e._v("Licensed under "),t("strong",[e._v("GPLv3")]),e._v(".\nSee "),t("a",{attrs:{href:"LICENSE"}},[e._v("LICENSE")]),e._v(" for more information.")]),e._v(" "),t("h3",{attrs:{id:"acknowledgements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#acknowledgements","aria-hidden":"true"}},[e._v("#")]),e._v(" Acknowledgements")]),e._v(" "),t("p",[e._v("Thanks to "),t("a",{attrs:{href:"https://github.com/avivace/awesome-gbdev/graphs/contributors",target:"_blank",rel:"noopener noreferrer"}},[e._v("every"),t("OutboundLink")],1),e._v(' contributor of this project, Jeff Frohwein, Pascal Felber, KOOPa, Pan of Anthrox, GABY, Marat Fayzullin, Paul Robson, BOWSER, neviksti, Martin “nocash" Korth, Nitro2k01, Duo, Chris Antonellis, Michael Hope, Beware, Jonathan “Lord Nightmare” Gevaryahu, Carsten Sorense, Sindre Aamås, Otaku No Zoku, GeeBee.')]),e._v(" "),t("h3",{attrs:{id:"sponsors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sponsors","aria-hidden":"true"}},[e._v("#")]),e._v(" Sponsors")]),e._v(" "),t("p",[e._v("Special thanks to our friends at "),t("a",{attrs:{href:"https://www.digitalocean.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("DigitalOcean"),t("OutboundLink")],1),e._v(", sponsoring the open source activites of our Game Boy Development community ("),t("a",{attrs:{href:"https://twitter.com/avivace4/status/992188011990409216",target:"_blank",rel:"noopener noreferrer"}},[e._v("announcement"),t("OutboundLink")],1),e._v(").")])])},[],!1,null,null,null);r.default=a.exports}}]);